{
    "pipes": [],
    "interfaces": [
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-ee4193045a1f82c040fedb2f369e3140b47d8a035703b10a07e0e0828ba1f8d41cd3e203990d316608751fc9db7b96550e6bceb7693a848a7830ccd7d39d3613",
            "file": "src/components/table/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nexport const ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n];\nexport interface ProgressPillScore {\n  ok:number;\n  good:number;\n  bad:number;\n}\nexport interface StudentResult{\n  name: string;\n  id: number;\n  grade: ProgressPillScore;\n}\nexport const CHILDREN_DATA: StudentResult[] = [\n  {id: 1, name: \"Pietje\", grade:{ ok: 1, good:2, bad: 3}},\n  {id: 2, name: \"Jantje\", grade:{ ok:2, good:3, bad: 3}},\n  {id: 3, name: \"Klaasje\", grade:{ ok: 3, good:0, bad: 0}},\n  {id: 4, name: \"Huubje\", grade:{ ok: 4, good:12, bad: 3}},\n];\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProgressPillScore",
            "id": "interface-ProgressPillScore-ee4193045a1f82c040fedb2f369e3140b47d8a035703b10a07e0e0828ba1f8d41cd3e203990d316608751fc9db7b96550e6bceb7693a848a7830ccd7d39d3613",
            "file": "src/components/table/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nexport const ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n];\nexport interface ProgressPillScore {\n  ok:number;\n  good:number;\n  bad:number;\n}\nexport interface StudentResult{\n  name: string;\n  id: number;\n  grade: ProgressPillScore;\n}\nexport const CHILDREN_DATA: StudentResult[] = [\n  {id: 1, name: \"Pietje\", grade:{ ok: 1, good:2, bad: 3}},\n  {id: 2, name: \"Jantje\", grade:{ ok:2, good:3, bad: 3}},\n  {id: 3, name: \"Klaasje\", grade:{ ok: 3, good:0, bad: 0}},\n  {id: 4, name: \"Huubje\", grade:{ ok: 4, good:12, bad: 3}},\n];\n",
            "properties": [
                {
                    "name": "bad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "good",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "ok",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StudentResult",
            "id": "interface-StudentResult-ee4193045a1f82c040fedb2f369e3140b47d8a035703b10a07e0e0828ba1f8d41cd3e203990d316608751fc9db7b96550e6bceb7693a848a7830ccd7d39d3613",
            "file": "src/components/table/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nexport const ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n];\nexport interface ProgressPillScore {\n  ok:number;\n  good:number;\n  bad:number;\n}\nexport interface StudentResult{\n  name: string;\n  id: number;\n  grade: ProgressPillScore;\n}\nexport const CHILDREN_DATA: StudentResult[] = [\n  {id: 1, name: \"Pietje\", grade:{ ok: 1, good:2, bad: 3}},\n  {id: 2, name: \"Jantje\", grade:{ ok:2, good:3, bad: 3}},\n  {id: 3, name: \"Klaasje\", grade:{ ok: 3, good:0, bad: 0}},\n  {id: 4, name: \"Huubje\", grade:{ ok: 4, good:12, bad: 3}},\n];\n",
            "properties": [
                {
                    "name": "grade",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProgressPillScore",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ExampleDataSource",
            "id": "class-ExampleDataSource-aaee28c47ca8589e9ce3ce2465d6bbf087d7d8e1a09fbad35c8907f2443903823c0f3b2e32394224617473c3f06b2626098aa24a15c528e813bfc911221b8fec",
            "file": "src/components/table/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { ColumnDirective } from '../column/column.directive';\n\n@Component({\n  selector: 'p1-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent<T> implements OnInit, AfterContentInit {\n\n  @Input()\n  data: T[];\n\n  @ContentChildren(ColumnDirective)\n  content: QueryList<ColumnDirective>;\n  columns: ColumnDirective[];\n\n  dataSource: ExampleDataSource<T>;\n  displayColumns: string[];\n\n  currentSortColumn: string;\n  sortAscending: Map<string, boolean> = new Map<string, boolean>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.dataSource = new ExampleDataSource(this.data);\n  }\n\n  ngAfterContentInit(): void {\n    this.columns = this.content.toArray();\n    this.displayColumns = this.content.map(value => value.name);\n    this.content.forEach((item) => this.sortAscending.set(item.name, false));\n  }\n\n  changeSort(column: string): void {\n    this.currentSortColumn = column;\n    this.sortAscending.set(column, !this.sortAscending.get(column));\n  }\n\n  isAscending(column: string): boolean{\n    return this.sortAscending.get(column) || false;\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource<T> extends DataSource<T> {\n  /** Stream of data that is provided to the table. */\n  data: BehaviorSubject<T[]>;\n\n  constructor(_data: T[]) {\n    super();\n    this.data = new BehaviorSubject<T[]>(_data);\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<T[]> {\n    return this.data;\n  }\n\n  disconnect() {\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_data",
                        "type": "T[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "_data",
                        "type": "T[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T[]>",
                    "optional": false,
                    "description": "<p>Stream of data that is provided to the table.</p>\n",
                    "line": 60,
                    "rawdescription": "\nStream of data that is provided to the table."
                }
            ],
            "description": "<p>Data source to provide what data should be rendered in the table. Note that the data source\ncan retrieve its data in any way. In this case, the data source is provided a reference\nto a common data base, ExampleDatabase. It is not the data source&#39;s responsibility to manage\nthe underlying data. Instead, it only needs to take the data and send the table exactly what\nshould be rendered.</p>\n",
            "rawdescription": "\n\nData source to provide what data should be rendered in the table. Note that the data source\ncan retrieve its data in any way. In this case, the data source is provided a reference\nto a common data base, ExampleDatabase. It is not the data source's responsibility to manage\nthe underlying data. Instead, it only needs to take the data and send the table exactly what\nshould be rendered.\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nConnect function called by the table to retrieve one stream containing the data to render.",
                    "description": "<p>Connect function called by the table to retrieve one stream containing the data to render.</p>\n"
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ColumnDirective",
            "id": "directive-ColumnDirective-0df722a6a6c2612627fd5483e6d0e3146e8d2f3f87bb3c43e9e46df122159be9d13376cccb2147fafe092dd933e2dae07b7c67fa4195edbfb2956d89ce40ed17",
            "file": "src/components/table/column/column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[p1Column]'\n})\nexport class ColumnDirective implements OnInit {\n\n  @Input()\n  name: string;\n  @Input()\n  title?: string;\n  @Input()\n  sortable?: boolean = false;\n\n  constructor(public template: TemplateRef<any>) { }\n\n  ngOnInit(): void {\n    this.title = this.title ?? this.name;\n  }\n}\n",
            "selector": "[p1Column]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sortable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1643790e33c2e59af1af27a2f56c2de2f81fed3fb7ccfc2d897a908e6ce0c3c23ad97bb3d70fbff3f71c0cf7c64f0eaef681e214e7224a8495f6c1223e778b5e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'generic-table'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'generic-table';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-42bd85d63def2fe0541b11ab68bd8c0003f30e29b8c2993e5ee994c01f4c133ed95a109d484d14d6ccffa117608ba34f7520c49b85baa02f40be3e1e7690b001",
            "file": "src/components/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "eb-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'eb-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>icon works!</p>\n"
        },
        {
            "name": "ProgressPillComponent",
            "id": "component-ProgressPillComponent-5659cc96b0cf4b49be2d053553f287efc60d2ded5e1a4a733ad5e83ab0b8d65ccab462cd02785696b150837a63ade0b5bcfa5c1bc9dbedf03c7676964e4d3d68",
            "file": "src/components/progress-pill/progress-pill.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p1-progress-pill",
            "styleUrls": [
                "./progress-pill.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-pill.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "score",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ProgressPillScore",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport {ProgressPillScore} from \"../table/data\";\n\n\n@Component({\n  selector: 'p1-progress-pill',\n  templateUrl: './progress-pill.component.html',\n  styleUrls: ['./progress-pill.component.scss']\n})\nexport class ProgressPillComponent {\n\n  @Input()\n  public score: ProgressPillScore;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'variables';\n@import 'mixins';\n\n.progress-pill {\n  background: rgb(170 179 189 / 0.3);\n  border-radius: $p1-gutter-size-small;\n  display: flex;\n  flex-direction: row;\n  height: 1.6rem;\n  margin: 0.8rem 0;\n  overflow: hidden;\n  width: 22.2rem;\n\n  .ok {\n    background: $p1-feedback-incomplete-color;\n  }\n\n  .bad {\n    background: $p1-feedback-incorrect-color;\n  }\n\n  .good {\n    background: $p1-feedback-correct-color;\n  }\n}\n",
                    "styleUrl": "./progress-pill.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"progress-pill\">\n  <div [style.flex]=\"score.good\" class=\"good\"></div>\n  <div [style.flex]=\"score.ok\" class=\"ok\"></div>\n  <div [style.flex]=\"score.bad\" class=\"bad\"></div>\n</div>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-aaee28c47ca8589e9ce3ce2465d6bbf087d7d8e1a09fbad35c8907f2443903823c0f3b2e32394224617473c3f06b2626098aa24a15c528e813bfc911221b8fec",
            "file": "src/components/table/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p1-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnDirective[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ColumnDirective>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ColumnDirective"
                        }
                    ]
                },
                {
                    "name": "currentSortColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExampleDataSource<T>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "displayColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "sortAscending",
                    "defaultValue": "new Map<string, boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | boolean>",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "changeSort",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAscending",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { ColumnDirective } from '../column/column.directive';\n\n@Component({\n  selector: 'p1-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent<T> implements OnInit, AfterContentInit {\n\n  @Input()\n  data: T[];\n\n  @ContentChildren(ColumnDirective)\n  content: QueryList<ColumnDirective>;\n  columns: ColumnDirective[];\n\n  dataSource: ExampleDataSource<T>;\n  displayColumns: string[];\n\n  currentSortColumn: string;\n  sortAscending: Map<string, boolean> = new Map<string, boolean>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.dataSource = new ExampleDataSource(this.data);\n  }\n\n  ngAfterContentInit(): void {\n    this.columns = this.content.toArray();\n    this.displayColumns = this.content.map(value => value.name);\n    this.content.forEach((item) => this.sortAscending.set(item.name, false));\n  }\n\n  changeSort(column: string): void {\n    this.currentSortColumn = column;\n    this.sortAscending.set(column, !this.sortAscending.get(column));\n  }\n\n  isAscending(column: string): boolean{\n    return this.sortAscending.get(column) || false;\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource<T> extends DataSource<T> {\n  /** Stream of data that is provided to the table. */\n  data: BehaviorSubject<T[]>;\n\n  constructor(_data: T[]) {\n    super();\n    this.data = new BehaviorSubject<T[]>(_data);\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<T[]> {\n    return this.data;\n  }\n\n  disconnect() {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'variables';\n@import 'mixins';\n\n.p1-table {\n  background: #fff;\n  border-radius: $p1-radius-small;\n  font-size: 1.8rem;\n  margin: $p1-gutter-size;\n  overflow: auto;\n\n  // cross component solution\n  .select-student .button-area {\n    padding: 1.6rem 0 !important;\n  }\n\n  table {\n    width: 100%;\n\n    th {\n      vertical-align: middle;\n    }\n\n    td {\n      vertical-align: top;\n      background: #fff;\n    }\n\n    th,\n    td {\n      padding: $p1-gutter-size;\n      text-align: left;\n\n      // td th util classes\n      &.p1-table-bold {\n        font-weight: 600;\n      }\n\n      &.p1-table-primary-column {\n        min-width: 30rem;\n        width: 30rem;\n      }\n\n      &.p1-table-primary-column-large {\n        min-width: 60rem;\n        width: 60rem;\n      }\n\n      &.p1-table-column-medium {\n        min-width: 20rem;\n        width: 20rem;\n      }\n\n      &.p1-table-spacer {\n        width: 100%;\n      }\n\n      &.p1-table-separator {\n        border-left: $p1-table-border;\n      }\n\n      &.p1-table-center {\n        text-align: center;\n      }\n\n      &.p1-table-right {\n        text-align: right;\n      }\n\n      &.p1-table-sort {\n        cursor: pointer;\n        font-weight: 600;\n        white-space: nowrap;\n      }\n\n      &.p1-table-nowrap {\n        white-space: nowrap;\n      }\n\n      &.p1-table-narrow {\n        padding: $p1-gutter-size-small ($p1-gutter-size-small * 0.5);\n      }\n\n      &.p1-table-no-padding {\n        padding: 0;\n      }\n\n      &.p1-table-pointer {\n        cursor: pointer;\n      }\n\n      &.p1-table-vertical-align-middle {\n        vertical-align: middle;\n      }\n    }\n\n    // hyperlinks\n    a {\n      color: $p1-content-color;\n    }\n\n    // borders\n    thead tr:first-child {\n      th,\n      td {\n        border-bottom: $p1-table-border;\n      }\n\n      th {\n        white-space: nowrap;\n      }\n    }\n\n    tbody tr {\n      overflow: hidden;\n\n      &.p1-table-subtitle {\n        font-size: 1.6rem;\n        font-weight: 600;\n        text-transform: uppercase;\n\n        td {\n          padding: 0.8rem 1.6rem;\n        }\n      }\n\n      th,\n      td {\n        border-bottom: $p1-table-border;\n      }\n\n      &:last-child td,\n      &:last-child th {\n        border-bottom: none;\n      }\n\n      // link-button\n      .p1-table-link-button {\n        cursor: pointer;\n        display: flex;\n        flex-direction: row;\n        text-decoration: none;\n\n        span {\n          flex: 1;\n        }\n      }\n\n      // link-button with extra click space\n      .p1-table-no-padding .p1-table-link-button {\n        padding: $p1-gutter-size;\n      }\n    }\n  }\n\n  // table icons\n  eb-icon {\n    @include p1-size(2.4rem);\n    fill: $p1-content-color;\n    min-width: 2.4rem;\n    transition: transform 0.1s ease-in-out;\n    vertical-align: top;\n\n    &.flip {\n      transform: rotate(180deg);\n    }\n\n    &.inactive {\n      fill: $p1-disabled-color;\n    }\n\n    &.header-icon-with-text {\n      padding-right: $p1-gutter-size-small * 0.5;\n    }\n\n    &.align-bottom {\n      vertical-align: bottom;\n    }\n  }\n\n  p1-task-icon {\n    @include p1-size(2.4rem);\n  }\n\n  // sticky columns\n  &.p1-table-fixed-first-column {\n    tbody tr {\n      border-top: none;\n    }\n\n    tbody td {\n      border-top: $p1-table-border;\n    }\n\n    td:first-child,\n    th:first-child {\n      background: #fff;\n      border-bottom-left-radius: $p1-radius-small;\n      border-top-left-radius: $p1-radius-small;\n      left: 0;\n      position: sticky;\n      z-index: 2;\n    }\n\n    &.scrolled {\n      td:first-child,\n      th:first-child {\n        border-top-color: #fff;\n        box-shadow: 0.3rem 0.3rem 0.6rem 0 rgba(0, 0, 0, 0.1);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit",
                "AfterContentInit"
            ],
            "templateData": "<div class='p1-table'>\n  <table cdk-table [dataSource]='dataSource'>\n    <ng-container *ngFor='let column of columns' cdkColumnDef='{{column.name}}'>\n      <th cdk-header-cell *cdkHeaderCellDef>\n        <span (click)=\"changeSort(column.name)\" >\n          <mat-icon>home</mat-icon>\n        <!--eb-icon *ngIf='column.sortable'\n                 [class.flip]='isAscending(column.name)'\n                 [class.inactive]=\"currentSortColumn !== column.name\"\n                 name='arrow-down-with-stick'>\n        </eb-icon-->\n        {{column.title}}\n          </span>\n      </th>\n      <td cdk-cell *cdkCellDef='let element'>\n        <ng-container *ngTemplateOutlet='column.template;context:{data: element[column.name]}'>as</ng-container>\n      </td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef='this.displayColumns'></tr>\n    <tr cdk-row *cdkRowDef='let row; columns: displayColumns;'></tr>\n  </table>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-e4504803f7ac7606d65b7be85637b4bd331b440be161e78d6ea70d6ed3da3442be4af41d35d68c126b34869feffcdd9476ab6bd02e120e77ef2953f329ff0337",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-7fc4decbff1ebc07913a5519cf867abd1fbc74bc5c2fff4890d193c92fe4ae66593826db23cb595ad8f6e27f6635589245b0be9affb68d7cfe9ad3c97e0a7bb0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconComponent } from './icon/icon.component';\nimport { ProgressPillComponent } from './progress-pill/progress-pill.component';\n\n\n\n@NgModule({\n  declarations: [\n    IconComponent,\n    ProgressPillComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ComponentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "ProgressPillComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TableModule",
            "id": "module-TableModule-fb2db269bb5ea21ec7527e525347832c78073dbb1e4b3d54d79112421d60a0d537a817ea43e0d5f16aed51eada6560a581a5b7cfca129e109d80ded41765ebd3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/components/table/table.module.ts",
            "methods": [],
            "sourceCode": "import { CdkTableModule } from '@angular/cdk/table';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n\nimport { ColumnDirective } from './column/column.directive';\nimport { TableComponent } from './table/table.component';\nimport {MatIconModule} from \"@angular/material/icon\";\n\n\n@NgModule({\n  declarations: [\n    TableComponent,\n    ColumnDirective,\n  ],\n    imports: [\n        CommonModule,\n        CdkTableModule,\n        MatIconModule\n    ],\n  exports: [\n    TableComponent,\n    ColumnDirective,\n  ]\n})\nexport class TableModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ColumnDirective"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ColumnDirective"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CHILDREN_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StudentResult[]",
                "defaultValue": "[\n  {id: 1, name: \"Pietje\", grade:{ ok: 1, good:2, bad: 3}},\n  {id: 2, name: \"Jantje\", grade:{ ok:2, good:3, bad: 3}},\n  {id: 3, name: \"Klaasje\", grade:{ ok: 3, good:0, bad: 0}},\n  {id: 4, name: \"Huubje\", grade:{ ok: 4, good:12, bad: 3}},\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "nonDefaultCell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent<StudentResult>>",
                "defaultValue": "(args: TableComponent<StudentResult>) => ({\n  props: args,\n  template: `\n<p1-table  [data]='data' >\n  <ng-template p1Column name='id' sortable='true' title='Identifier' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='name' sortable='true' title='Name' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='grade' sortable='true' title='Score' let-data='data'><p1-progress-pill [score]='data'></p1-progress-pill></ng-template>\n</p1-table>\n`\n})"
            },
            {
                "name": "nonDefaultCellType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "nonDefaultCell.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent<PeriodicElement>>",
                "defaultValue": "(args: TableComponent<PeriodicElement>) => ({\n  props: args,\n  template: `\n<p1-table  [data]='data' >\n  <ng-template p1Column name='position' title='Position' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='name' title='Name' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='weight' title='Weight' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='symbol' title='Symbol' let-data='data'>{{data}}</ng-template>\n</p1-table>\n`\n})"
            },
            {
                "name": "simpleTable4Columns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "simple.bind({})"
            },
            {
                "name": "sortable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent<PeriodicElement>>",
                "defaultValue": "(args: TableComponent<PeriodicElement>) => ({\n  props: args,\n  template: `\n<p1-table  [data]='data' >\n  <ng-template p1Column name='position' title='Position' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='name' sortable='true' title='Name' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='weight' sortable='true' title='Weight' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='symbol' title='Symbol' let-data='data'>{{data}}</ng-template>\n</p1-table>\n`\n})"
            },
            {
                "name": "sortableColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "sortable.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/components/table/data.ts": [
                {
                    "name": "CHILDREN_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StudentResult[]",
                    "defaultValue": "[\n  {id: 1, name: \"Pietje\", grade:{ ok: 1, good:2, bad: 3}},\n  {id: 2, name: \"Jantje\", grade:{ ok:2, good:3, bad: 3}},\n  {id: 3, name: \"Klaasje\", grade:{ ok: 3, good:0, bad: 0}},\n  {id: 4, name: \"Huubje\", grade:{ ok: 4, good:12, bad: 3}},\n]"
                },
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' }\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/components/table/table.component.stories.ts": [
                {
                    "name": "nonDefaultCell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent<StudentResult>>",
                    "defaultValue": "(args: TableComponent<StudentResult>) => ({\n  props: args,\n  template: `\n<p1-table  [data]='data' >\n  <ng-template p1Column name='id' sortable='true' title='Identifier' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='name' sortable='true' title='Name' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='grade' sortable='true' title='Score' let-data='data'><p1-progress-pill [score]='data'></p1-progress-pill></ng-template>\n</p1-table>\n`\n})"
                },
                {
                    "name": "nonDefaultCellType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "nonDefaultCell.bind({})"
                },
                {
                    "name": "simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent<PeriodicElement>>",
                    "defaultValue": "(args: TableComponent<PeriodicElement>) => ({\n  props: args,\n  template: `\n<p1-table  [data]='data' >\n  <ng-template p1Column name='position' title='Position' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='name' title='Name' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='weight' title='Weight' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='symbol' title='Symbol' let-data='data'>{{data}}</ng-template>\n</p1-table>\n`\n})"
                },
                {
                    "name": "simpleTable4Columns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "simple.bind({})"
                },
                {
                    "name": "sortable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent<PeriodicElement>>",
                    "defaultValue": "(args: TableComponent<PeriodicElement>) => ({\n  props: args,\n  template: `\n<p1-table  [data]='data' >\n  <ng-template p1Column name='position' title='Position' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='name' sortable='true' title='Name' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='weight' sortable='true' title='Weight' let-data='data'>{{data}}</ng-template>\n  <ng-template p1Column name='symbol' title='Symbol' let-data='data'>{{data}}</ng-template>\n</p1-table>\n`\n})"
                },
                {
                    "name": "sortableColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "sortable.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/components/progress-pill/progress-pill.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressPillComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/components/table/column/column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/components/table/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/components/table/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProgressPillScore",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/table/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StudentResult",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/table/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHILDREN_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nonDefaultCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "nonDefaultCellType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleTable4Columns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sortable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sortableColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table/table.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ExampleDataSource",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}